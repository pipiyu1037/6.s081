1. Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?

The a0 - a7 registers contain arguments to function. In the printf function, a2 holds the argument 13.

2.  Where is the call to function f in the assembly code for main? \
    Where is the call to g? (Hint: the compiler may inline functions.)

The call to function f has heen optimized by compiler.
The call to function g has been optimized by compiler in function f, with inline "addiw	a0,a0,3", too.

3. At what address is the function printf located?

Address: 0x628

4. What value is in the register ra just after the jalr to printf in main?

It will be 0x38

5. Run the following code.

```
	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
```

6. What is the output? Here's an ASCII table that maps bytes to characters.
    The output depends on that fact that the RISC-V is little-endian.
    If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?

The output is HE110 World

i should be 0x726c6400
57616 need not to change to other value because E110 is the HEX of 57616

In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?

	printf("x=%d y=%d", 3);

The value of register a2.